{"version":3,"sources":["../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/Badge.js","components/projects/ProjectCard.jsx"],"names":["CardBody","React","_ref","ref","className","bsPrefix","as","Component","props","useBootstrapPrefix","_jsx","classNames","displayName","CardFooter","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","CardImg","variant","concat","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Button","size","active","disabled","buttonProps","tagName","useButtonProps","href","Badge","pill","styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","ProjectCard","_project$links","theme","useContext","ThemeContext","project","_jsxs","style","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","height","src","image","title","bodyText","ReactMarkdown","links","map","link","onClick","window","open","tags","cardFooterBackground","tag","bsPrimaryVariant"],"mappings":"qKAMA,MAAMA,EAAwBC,cAAiB,CAAAC,EAK5CC,KAAQ,IALqC,UAC9CC,EAAS,SACTC,EACAC,GAAIC,EAAY,SACbC,GACJN,EAEC,OADAG,EAAWI,YAAmBJ,EAAU,aACpBK,cAAKH,EAAW,CAClCJ,IAAKA,EACLC,UAAWO,IAAWP,EAAWC,MAC9BG,GACH,IAEJR,EAASY,YAAc,WACRZ,QCdf,MAAMa,EAA0BZ,cAAiB,CAAAC,EAK9CC,KAAQ,IALuC,UAChDC,EAAS,SACTC,EACAC,GAAIC,EAAY,SACbC,GACJN,EAEC,OADAG,EAAWI,YAAmBJ,EAAU,eACpBK,cAAKH,EAAW,CAClCJ,IAAKA,EACLC,UAAWO,IAAWP,EAAWC,MAC9BG,GACH,IAEJK,EAAWD,YAAc,aACVC,Q,QCZf,MAAMC,EAA0Bb,cAAiB,CAAAC,EAM9CC,KAAQ,IANuC,SAChDE,EAAQ,UACRD,EAEAE,GAAIC,EAAY,SACbC,GACJN,EACC,MAAMa,EAASN,YAAmBJ,EAAU,eACtCW,EAAeC,mBAAQ,KAAM,CACjCC,mBAAoBH,KAClB,CAACA,IACL,OAAoBL,cAAKS,IAAkBC,SAAU,CACnDC,MAAOL,EACPM,SAAuBZ,cAAKH,EAAW,CACrCJ,IAAKA,KACFK,EACHJ,UAAWO,IAAWP,EAAWW,MAEnC,IAEJD,EAAWF,YAAc,aACVE,QCvBf,MAAMS,EAAuBtB,cAE7B,CAAAC,EAMGC,KAAQ,IANV,SACCE,EAAQ,UACRD,EAAS,QACToB,EACAlB,GAAIC,EAAY,SACbC,GACJN,EACC,MAAMa,EAASN,YAAmBJ,EAAU,YAC5C,OAAoBK,cAAKH,EAAW,CAClCJ,IAAKA,EACLC,UAAWO,IAAWa,EAAU,GAAHC,OAAMV,EAAM,KAAAU,OAAID,GAAYT,EAAQX,MAC9DI,GACH,IAEJe,EAAQX,YAAc,UACPW,QCjBf,MAAMG,EAA8BzB,cAAiB,CAAAC,EAKlDC,KAAQ,IAL2C,UACpDC,EAAS,SACTC,EACAC,GAAIC,EAAY,SACbC,GACJN,EAEC,OADAG,EAAWI,YAAmBJ,EAAU,oBACpBK,cAAKH,EAAW,CAClCJ,IAAKA,EACLC,UAAWO,IAAWP,EAAWC,MAC9BG,GACH,IAEJkB,EAAed,YAAc,iBACdc,QCdf,MAAMC,EAAwB1B,cAAiB,CAAAC,EAK5CC,KAAQ,IALqC,UAC9CC,EAAS,SACTC,EACAC,GAAIC,EAAY,OACbC,GACJN,EAEC,OADAG,EAAWI,YAAmBJ,EAAU,aACpBK,cAAKH,EAAW,CAClCJ,IAAKA,EACLC,UAAWO,IAAWP,EAAWC,MAC9BG,GACH,IAEJmB,EAASf,YAAc,WACRe,Q,QCbf,MAAMC,EAAgBC,YAAiB,MACjCC,EAA4B7B,cAAiB,CAAAC,EAKhDC,KAAQ,IALyC,UAClDC,EAAS,SACTC,EACAC,GAAIC,EAAYqB,KACbpB,GACJN,EAEC,OADAG,EAAWI,YAAmBJ,EAAU,iBACpBK,cAAKH,EAAW,CAClCJ,IAAKA,EACLC,UAAWO,IAAWP,EAAWC,MAC9BG,GACH,IAEJsB,EAAalB,YAAc,eACZkB,QChBf,MAAMC,EAAwB9B,cAAiB,CAAAC,EAK5CC,KAAQ,IALqC,UAC9CC,EAAS,SACTC,EACAC,GAAIC,EAAY,OACbC,GACJN,EAEC,OADAG,EAAWI,YAAmBJ,EAAU,aACpBK,cAAKH,EAAW,CAClCJ,IAAKA,EACLC,UAAWO,IAAWP,EAAWC,MAC9BG,GACH,IAEJuB,EAASnB,YAAc,WACRmB,QCbf,MAAMC,EAAgBH,YAAiB,MACjCI,EAAyBhC,cAAiB,CAAAC,EAK7CC,KAAQ,IALsC,UAC/CC,EAAS,SACTC,EACAC,GAAIC,EAAYyB,KACbxB,GACJN,EAEC,OADAG,EAAWI,YAAmBJ,EAAU,cACpBK,cAAKH,EAAW,CAClCJ,IAAKA,EACLC,UAAWO,IAAWP,EAAWC,MAC9BG,GACH,IAEJyB,EAAUrB,YAAc,YACTqB,QCPf,MAAMC,EAAoBjC,cAAiB,CAAAC,EAWxCC,KAAQ,IAXiC,SAC1CE,EAAQ,UACRD,EAAS,GACT+B,EAAE,KACFC,EAAI,OACJC,EAAM,KACNC,GAAO,EAAK,SACZhB,EAEAhB,GAAIC,EAAY,SACbC,GACJN,EACC,MAAMa,EAASN,YAAmBJ,EAAU,QAC5C,OAAoBK,cAAKH,EAAW,CAClCJ,IAAKA,KACFK,EACHJ,UAAWO,IAAWP,EAAWW,EAAQoB,GAAM,MAAJV,OAAUU,GAAMC,GAAQ,QAAJX,OAAYW,GAAQC,GAAU,UAAJZ,OAAcY,IACvGf,SAAUgB,EAAoB5B,cAAKV,EAAU,CAC3CsB,SAAUA,IACPA,GACL,IAEJY,EAAKtB,YAAc,OACJ2B,aAAOC,OAAON,EAAM,CACjCO,IAAKlB,EACLmB,MAAOT,EACPU,SAAUb,EACVc,KAAM5C,EACN6C,KAAMlB,EACNmB,KAAMf,EACNgB,OAAQjC,EACRkC,OAAQnC,EACRoC,WAAYvB,I,QCxCd,MAAMwB,EAAsBjD,cAAiB,CAAAC,EAS1CC,KAAQ,IATmC,GAC5CG,EAAE,SACFD,EAAQ,QACRmB,EAAU,UAAS,KACnB2B,EAAI,OACJC,GAAS,EAAK,SACdC,GAAW,EAAK,UAChBjD,KACGI,GACJN,EACC,MAAMa,EAASN,YAAmBJ,EAAU,QACrCiD,GAAa,QAClBC,IACGC,YAAe,CAClBD,QAASjD,EACT+C,cACG7C,IAECD,EAAYgD,EAClB,OAAoB7C,cAAKH,EAAW,IAC/B+C,KACA9C,EACHL,IAAKA,EACLkD,SAAUA,EACVjD,UAAWO,IAAWP,EAAWW,EAAQqC,GAAU,SAAU5B,GAAW,GAAJC,OAAOV,EAAM,KAAAU,OAAID,GAAW2B,GAAQ,GAAJ1B,OAAOV,EAAM,KAAAU,OAAI0B,GAAQ3C,EAAMiD,MAAQJ,GAAY,aACvJ,IAEJH,EAAOtC,YAAc,SACNsC,QC7Bf,MAAMQ,EAAqBzD,cAAiB,CAAAC,EAQzCC,KAAQ,IARkC,SAC3CE,EAAQ,GACR8B,EAAK,UAAS,KACdwB,GAAO,EAAK,KACZvB,EAAI,UACJhC,EACAE,GAAIC,EAAY,UACbC,GACJN,EACC,MAAMa,EAASN,YAAmBJ,EAAU,SAC5C,OAAoBK,cAAKH,EAAW,CAClCJ,IAAKA,KACFK,EACHJ,UAAWO,IAAWP,EAAWW,EAAQ4C,GAAQ,eAAgBvB,GAAQ,QAAJX,OAAYW,GAAQD,GAAM,MAAJV,OAAUU,KACrG,IAEJuB,EAAM9C,YAAc,QACL8C,Q,iBCjBf,MAAME,EAAS,CACbC,WAAY,CACVC,YAAa,GACbC,aAAc,GACdC,WAAY,EACZC,cAAe,EACfC,OAAQ,GAEVC,UAAW,CACTC,aAAc,IAEhBC,eAAgB,CACdC,SAAU,GACVC,WAAY,KAEdC,cAAe,CACbC,UAAW,QAEbC,UAAW,CACTC,eAAgB,OAChBC,QAAS,IAEXC,YAAa,CACXX,OAAQ,IA6DGY,UAzDMtE,IAAW,IAADuE,EAC7B,MAAMC,EAAQC,qBAAWC,MAGnB,QAAEC,GAAY3E,EAEpB,OACE4E,eAAClD,EAAI,CACH9B,UAAU,2BACViF,MAAO,IACFzB,EAAOO,UACVmB,gBAAiBN,EAAMO,eACvBC,YAAaR,EAAMS,iBAErBrD,KAAM4C,EAAMU,mBAAmBpE,SAAA,CAE/BZ,cAACwB,EAAKO,IAAG,CAACjB,QAAQ,MAAMmE,OAAO,MAAMC,IAAY,OAAPT,QAAO,IAAPA,OAAO,EAAPA,EAASU,QACnDT,eAAClD,EAAKU,KAAI,CAAAtB,SAAA,CACRZ,cAACwB,EAAKQ,MAAK,CAAC2C,MAAOzB,EAAOS,eAAe/C,SAAE6D,EAAQW,QACnDpF,cAACwB,EAAKY,KAAI,CAACuC,MAAOzB,EAAOY,cAAclD,UAjBtBc,EAiBsC+C,EAAQY,SAjBrCrF,cAACsF,IAAa,CAAC1E,SAAUc,UAoBrD1B,cAACwB,EAAKU,KAAI,CAAAtB,SACA,OAAP6D,QAAO,IAAPA,GAAc,QAAPJ,EAAPI,EAASc,aAAK,IAAAlB,OAAP,EAAPA,EAAgBmB,KAAKC,GACpBzF,cAACwC,EAAM,CAAiBmC,MAAOzB,EAAOiB,YAAarD,QAAS,WAAawD,EAAMU,mBAAoBU,QAASA,IAAMC,OAAOC,KAAKH,EAAK1C,KAAM,UAAUnC,SAChJ6E,EAAK/D,MADK+D,EAAK1C,UAKrB0B,EAAQoB,MACP7F,cAACwB,EAAKc,OAAM,CAACqC,MAAO,CAAEC,gBAAiBN,EAAMwB,sBAAuBlF,SACjE6D,EAAQoB,KAAKL,KAAKO,GACjB/F,cAACgD,EAAK,CAAWC,MAAI,EAACxB,GAAI6C,EAAMU,mBAAoBtD,KAAM4C,EAAM0B,iBAAkBrB,MAAOzB,EAAOC,WAAWvC,SACxGmF,GADSA,UA9BCrE,KAoCd,C","file":"static/js/8.4e18f8b5.chunk.js","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","import React, { useContext } from \"react\";\r\nimport { Button, Card, Badge } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ThemeContext } from \"styled-components\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nconst styles = {\r\n  badgeStyle: {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    margin: 5,\r\n  },\r\n  cardStyle: {\r\n    borderRadius: 10,\r\n  },\r\n  cardTitleStyle: {\r\n    fontSize: 24,\r\n    fontWeight: 700,\r\n  },\r\n  cardTextStyle: {\r\n    textAlign: \"left\",\r\n  },\r\n  linkStyle: {\r\n    textDecoration: \"none\",\r\n    padding: 10,\r\n  },\r\n  buttonStyle: {\r\n    margin: 5,\r\n  },\r\n};\r\n\r\nconst ProjectCard = (props) => {\r\n  const theme = useContext(ThemeContext);\r\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\r\n\r\n  const { project } = props;\r\n\r\n  return (\r\n    <Card\r\n      className=\"h-100 d-flex flex-column\"\r\n      style={{\r\n        ...styles.cardStyle,\r\n        backgroundColor: theme.cardBackground,\r\n        borderColor: theme.cardBorderColor,\r\n      }}\r\n      text={theme.bsSecondaryVariant}\r\n    >\r\n      <Card.Img variant=\"top\" height=\"250\" src={project?.image} />\r\n      <Card.Body>\r\n        <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\r\n        <Card.Text style={styles.cardTextStyle}>{parseBodyText(project.bodyText)}</Card.Text>\r\n      </Card.Body>\r\n\r\n      <Card.Body>\r\n        {project?.links?.map((link) => (\r\n          <Button key={link.href} style={styles.buttonStyle} variant={\"outline-\" + theme.bsSecondaryVariant} onClick={() => window.open(link.href, \"_blank\")}>\r\n            {link.text}\r\n          </Button>\r\n        ))}\r\n      </Card.Body>\r\n      {project.tags && (\r\n        <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\r\n          {project.tags.map((tag) => (\r\n            <Badge key={tag} pill bg={theme.bsSecondaryVariant} text={theme.bsPrimaryVariant} style={styles.badgeStyle}>\r\n              {tag}\r\n            </Badge>\r\n          ))}\r\n        </Card.Footer>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nProjectCard.propTypes = {\r\n  project: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    bodyText: PropTypes.string.isRequired,\r\n    image: PropTypes.string,\r\n    links: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        text: PropTypes.string.isRequired,\r\n        href: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    tags: PropTypes.arrayOf(PropTypes.string),\r\n  }).isRequired,\r\n};\r\n\r\nexport default ProjectCard;\r\n"],"sourceRoot":""}